Flow:

-> Edge-disjoint path: 
    Conjunto de arestas de caminhos que levam do source ao sink sem repetir arestas entre os caminhos.
    Max Edge-disjoint path = Max Flow, com arestas de peso 1 no grafo.

-> Node-disjoint path: 
    Conjunto de nos de caminhos que levam do source ao sink sem repetir nos entre os caminhos.
    Max Node-disjoint path = Max Flow.
    Criamos um grafo onde cada no u ira existir uma copia u'. O no u tera todas as arestas de chegadas e o no u' todas as de saida e adicionamos a aresta u -> u'. Todas as arestas com capacidade 1.

-> Hall's Theorem:
    Em grafos bipartidos, existe um perfect matching no lado X se para cada subconjunto Y de X,
    |Y| <= |vizinhosY|, onde |Y| eh quantos vertices tem em Y.

-> Konig's Theorem:
    Em um grafo bipartido, Minimum Node Cover = Maximum Matching (Minimum Node Cover eh o conjunto minimo de nos onde cada aresta do grafo tem pelo menos um endpoint no conjunto).
    O complemento, n - Maximum Matching = Maximum Independent Set (Maior conjunto de nos onde nenhum dos nos possuem arestas conectando outro).

-> Node-disjoint path cover eh quando cada no so pertence a um unico caminho.
    Minimum Node-disjoint path cover = n - Maximum Match
    Criamos o grafo onde todo vertice u sera ligado ao source e criamos uma copia u' que sera ligada ao sink. Existira uma aresta v -> y' caso exista a aresta v -> y.

-> General Path Cover eh um path cover onde um no pode pertencer a mais de um caminho.
    Mesma coisa do Node-disjoint path cover mas existira uma aresta u -> v' caso exista caminho de u para v no grafo.

-> Dilworh's Theorem:
    Antichain = conjunto de nos de um grafo onde nao tem caminho de qualquer no para outro dentro do conjunto.
    Em um grafo direcionado aciclico, Minimum General Path Cover = Maximum antichain

Planar Graph:

-> Euler's formula for a connected planar graph:
    v + f - e = 2

-> Euler's formula for a disconnected planar graph:
    v - e + f = c + 1

-> Kuratowski's Theorem:
    A Graph is planar if and only if it contains no subdivision of K5 or K3,3.

Euler Path/Circuit:

-> Undirected Graph:
    -> Existe quando todas as arestas pertencem ao mesmo componente conexo e quando acontece um dos 2 casos:
    1. Grau de todo vertice eh par. (Euler Path = Euler Circuit)
    2. Grau de 2 vertices sao impar e o resto eh par. (Nao existe Euler Circuit e o "src" pode ser qualquer um dos impares)

-> Directed Graph:
    -> Existe quando todas as arestas pertencem ao mesmo componente conexo e quando acontece um dos 2 casos:
    1. Em todo vertice "u", inDegree[u] == inDegree[v] (Euler Path = Euler Circuit)
    2. Em um vertice "u", outDegree[u] == inDegree[u] + 1 e em outro vertice "v" inDegree[v] = outDegree[v] + 1 e nos outros
       "x" inDegree[x] == outDegree[x] (Nao existe Euler Circuit e o "src" eh o "u" com o final do Eulerian Path sendo "v")
